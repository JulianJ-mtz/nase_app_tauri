//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "temporada")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub fecha_inicial: Date,
    pub fecha_final: Option<Date>,
    pub meses: Option<i32>,
    #[sea_orm(column_type = "Decimal(Some((15, 3)))", nullable)]
    pub produccion_total: Option<Decimal>,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cuadrilla::Entity")]
    Cuadrilla,
    #[sea_orm(has_many = "super::produccion::Entity")]
    Produccion,
}

impl Related<super::cuadrilla::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Cuadrilla.def()
    }
}

impl Related<super::produccion::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Produccion.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
