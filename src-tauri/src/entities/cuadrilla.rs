//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "cuadrilla")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub lider_cuadrilla: Option<i32>,
    #[sea_orm(column_type = "Decimal(Some((15, 3)))", nullable)]
    pub produccion_cuadrilla: Option<Decimal>,
    pub lote: String,
    pub variedad: String,
    pub integrantes: Option<i32>,
    pub temporada_id: Option<i32>,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::jornalero::Entity")]
    Jornalero,
    #[sea_orm(
        belongs_to = "super::temporada::Entity",
        from = "Column::TemporadaId",
        to = "super::temporada::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Temporada,
}

impl Related<super::jornalero::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Jornalero.def()
    }
}

impl Related<super::temporada::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Temporada.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
